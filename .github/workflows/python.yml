name: Test&Lint Python Codebase

on:
  pull_request:
    branches:
      - "**"

env:
  UV_VERSION: "0.6.5"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/${{ env.UV_VERSION }}/install.sh | sh

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install dependencies
        run: uv sync --all-extras --dev --frozen

      - name: Set up pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
            pre-commit-${{ runner.os }}

      - name: Run pre-commit checks
        run: uv run pre-commit run --all-files

      - name: Test with pytest
        run: uv run pytest tests --cov=src

      - name: Minimize uv cache
        run: uv cache prune --ci
